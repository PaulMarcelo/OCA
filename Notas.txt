Apuntadores


Incrementales
x++
El incremento se hara efectivo despues del uso de la variable

x =10
z = x++

--> 

++x
El incremento es inmediato, en ese momento

###################### Operador Ternario ################################
Forma corta de representar IF ELSE 


###################### Arreglos de 2 dimensiones ################################

definicion:

int [] arreglo2[];
int arreglo3[][];
int [][] arreglo4;

instanciación:
int [] arreglo2[]= new int[2][];
int [] arreglo3[]= new int[2][3];

int [] arreglo3[]= {{3,1},{5,2},{4,1}};

###################### Interfaces - Abstractas ################################
Interface.- no es una clase
Método abstracto.- solo es la firma del método, no tiene implementación
En una interface Todos los métodos son abstractos

Modificadores de acceso en interfaces o clases abstractas
Métodos privados en el padre no se hereda a las clases hijas.
Todos los metodos de interface son publicos, por defecto
Todos los métodos de una clase son default, por defecto

Las Interfaces pueden heredar  de otras interfaces, pero no pueden implementar

Reglas:
1.- no se instancias interfaces ni clases abstractas
3.-  
2.- al sobre escribir un metodo no se puede hacer más restrictivos

###################### Herencia ################################

Padre =Hijo
Hijo=Padre

Hijo =Hijo


para cast simplemente debe estar en relacion de herencia
padre-hijo
hijo-padre
mismo tipo-mismo tipo

###################### Static ################################
Static .- no pertenece al objeto si no pertenece a la clase
Un metodo statico pertenece a la clase y no accede a atributos no estaticos
this no se puede usar en metodos estticos

###################### Casting################################
--Compilacion
tipo de dato
relación de herencia
--Ejecucion
aquien apunta
casting de hijo a un padre

###################### Excepciones################################
1.-checked

2.-unchecked
RuntimeException


###################### Compilación en consola ################################
Test.java => javac  => Test.class












